//
//  checkWinner.swift
//  ARKitHorizontalPlaneDemo
//
//  Created by Karthik on 10/29/18.
//  Copyright Â© 2018 eye_Ohh_ess. All rights reserved.
//

import Foundation
import UIKit
import ARKit

public class CheckWinner {
    
    func checkGameState(cubeState: [[[Cell]]], pos: String) -> Cell.cellState {
        let cube = cubeState
        let move = pos
        
        let winningCombos = [
            // Y axis
            ["000", "001", "002", "003"], ["100", "011", "012", "013"], ["020", "021", "022", "023"], ["030", "031", "032", "033"],
            ["100", "101", "102", "103"], ["110", "111", "112", "113"], ["120", "121", "122", "123"], ["130", "131", "132", "133"],
            ["200", "201", "202", "203"], ["210", "211", "212", "213"], ["220", "221", "222", "223"], ["230", "231", "232", "233"],
            ["300", "301", "302", "303"], ["310", "311", "312", "313"], ["320", "321", "322", "323"], ["330", "331", "332", "333"],
            // Z axis
            ["000", "010", "020", "030"], ["100", "110", "120", "130"], ["200", "210", "220", "230"], ["300", "310", "320", "330"],
            ["001", "011", "021", "031"], ["101", "111", "121", "131"], ["201", "211", "221", "231"], ["301", "311", "321", "331"],
            ["002", "012", "022", "032"], ["102", "112", "122", "132"], ["202", "212", "222", "232"], ["302", "312", "322", "332"],
            ["003", "013", "023", "033"], ["103", "113", "123", "133"], ["203", "213", "223", "233"], ["303", "313", "323", "333"],
            // X axis
            ["000", "100", "200", "300"], ["010", "110", "210", "310"], ["020", "120", "220", "320"], ["030", "130", "230", "330"],
            ["001", "101", "201", "301"], ["011", "111", "211", "311"], ["021", "121", "221", "321"], ["031", "131", "231", "331"],
            ["002", "102", "202", "302"], ["012", "112", "212", "312"], ["022", "122", "222", "322"], ["032", "132", "232", "332"],
            ["003", "103", "203", "303"], ["013", "113", "213", "313"], ["023", "123", "223", "323"], ["033", "133", "233", "333"],
            // XY axis
            ["033", "132", "231", "330"], ["023", "122", "221", "320"], ["013", "112", "211", "310"], ["003", "102", "201", "300"],
            ["333", "232", "131", "030"], ["323", "222", "121", "020"], ["313", "212", "111", "010"], ["303", "202", "101", "000"],
            // ZY axis
            ["033", "022", "011", "000"], ["133", "122", "111", "100"], ["233", "222", "211", "200"], ["333", "322", "311", "300"],
            ["003", "012", "021", "030"], ["103", "112", "121", "130"], ["203", "212", "221", "230"], ["303", "312", "321", "330"],
            // XZ axis
            ["033", "123", "213", "303"], ["032", "122", "212", "302"], ["031", "121", "211", "301"], ["030", "120", "210", "300"],
            ["003", "113", "223", "333"], ["002", "112", "222", "332"], ["001", "111", "221", "331"], ["000", "110", "220", "330"],
            // XYZ axis
            ["033", "122", "211", "300"], ["303", "212", "121", "030"], ["333", "222", "111", "000"], ["003", "112", "221", "330"]]
        
//        print("move: \(move)")
        for combo in winningCombos {
            if combo.contains(move) {
//                print("  combo: \(combo)")
                var win = true
                var arr = Array(move)
                let state = cube[Int(String(arr[0]))!][Int(String(arr[1]))!][Int(String(arr[2]))!].state
                for pos in 1...3 {
                    arr = Array(combo[pos])
                    if cube[Int(String(arr[0]))!][Int(String(arr[1]))!][Int(String(arr[2]))!].state != state {
                        win = false
                        break
                    }
                }
                if win && state != Cell.cellState.empty {
                    return state
                }
            }
        }
        
        return Cell.cellState.empty
        
//        // given cell state and position check if the current player has won
//        var flag = true
//
//        let x = Int(String(Array(move)[0])),
//            y = Int(String(Array(move)[1])),
//            z = Int(String(Array(move)[2]))
//        let currState = Cell.cellState.empty
//
//        flag = true
//        let checkMatrix = [
//            [(1, 0, 0), (1, 0, 0), (1, 0, 0)], // x-axis
//            [(0, 1, 0), (0, 1, 0), (0, 1, 0)], // y-axis
//            [(0, 0, 1), (0, 0, 1), (0, 0, 1)], // z-axis
//
//            [(1, 1, 0), (1, 1, 0), (1, 1, 0)], // xy plane
//            [(2, 1, 0), (2, 1, 0), (2, 1, 0)],
//
//            [(0, 1, 1), (0, 1, 1), (0, 1, 1)], // yz plane
//            [(0, 2, 1), (0, 2, 1), (0, 2, 1)],
//
//            [(1, 0, 1), (1, 0, 1), (1, 0, 1)], // xz plane
//            [(2, 0, 1), (2, 0, 1), (2, 0, 1)],
//
//            [(1, 1, 1), (1, 1, 1), (1, 1, 1)], // xyz
//            [(1, 2, 1), (1, 2, 1), (1, 2, 1)],
//            [(2, 2, 1), (2, 2, 1), (2, 2, 1)],
//            [(2, 1, 1), (2, 1, 1), (2, 1, 1)]]
//
//
//        for check in checkMatrix {
//            flag = true
//            for add in check {
//                let xadd = add.0
//                let yadd = add.1
//                let zadd = add.2
//
//                if cube[(x! + xadd) % 4][(y! + yadd) % 4][(z! + zadd) % 4].state != currState {
//                    flag = false
//                }
//            }
//            if flag { return true }
//        }
//
//        return false
    }
}
